{"version":3,"sources":["assets/icons sync /^/.//.*/.svg$","assets/icons/bug.svg","assets/icons/dark.svg","assets/icons/dragon.svg","assets/icons/electric.svg","assets/icons/fairy.svg","assets/icons/fighting.svg","assets/icons/fire.svg","assets/icons/flying.svg","assets/icons/ghost.svg","assets/icons/grass.svg","assets/icons/ground.svg","assets/icons/ice.svg","assets/icons/normal.svg","assets/icons/poison.svg","assets/icons/psychic.svg","assets/icons/rock.svg","assets/icons/steel.svg","assets/icons/water.svg","common/constants/env.js","services/api.js","services/pokeapi.js","containers/Home/style.js","containers/Home/index.jsx","hooks/usePokemon.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","apiUrl","process","REACT_APP_API_URL","apiTimeout","REACT_APP_API_TIMEOUT","axiosInstance","Axios","create","baseURL","headers","timeout","PokeApiService","getAll","offSet","limit","Api","get","getDetails","url","GridStyled","styled","Grid","CardStyled","Card","ImageStyled","img","CardContentStyled","CardContent","NameStyled","Typography","TypesStyled","Box","AvatarStyled","Avatar","PriceStyled","Home","useState","loading","setLoading","error","setError","data","setData","offset","setOffset","getPokemonDetail","pokemons","a","Promise","all","responseDetails","pokemonListDetails","getAllPokemon","useCallback","responseList","results","filter","value","length","dataCurrent","concat","response","status","paginate","offsetCurrent","usePokemon","useEffect","Container","Loading","backdrop","Snackbar","open","anchorOrigin","horizontal","vertical","autoHideDuration","onClose","Alert","variant","severity","container","spacing","item","xs","sm","md","lg","CardActionArea","alt","name","title","src","sprites","front_default","onMouseOver","currentTarget","back_default","onMouseOut","base_experience","types","type","require","default","align","Button","data-testid","size","color","onClick"],"mappings":"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","file":"static/js/4.926de74b.chunk.js","sourcesContent":["var map = {\n\t\"./bug.svg\": 130,\n\t\"./dark.svg\": 131,\n\t\"./dragon.svg\": 132,\n\t\"./electric.svg\": 133,\n\t\"./fairy.svg\": 134,\n\t\"./fighting.svg\": 135,\n\t\"./fire.svg\": 136,\n\t\"./flying.svg\": 137,\n\t\"./ghost.svg\": 138,\n\t\"./grass.svg\": 139,\n\t\"./ground.svg\": 140,\n\t\"./ice.svg\": 141,\n\t\"./normal.svg\": 142,\n\t\"./poison.svg\": 143,\n\t\"./psychic.svg\": 144,\n\t\"./rock.svg\": 145,\n\t\"./steel.svg\": 146,\n\t\"./water.svg\": 147\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 129;","export default __webpack_public_path__ + \"static/media/bug.204df919.svg\";","export default __webpack_public_path__ + \"static/media/dark.27fdc7ed.svg\";","export default __webpack_public_path__ + \"static/media/dragon.9d32757b.svg\";","export default __webpack_public_path__ + \"static/media/electric.bc35c5a3.svg\";","export default __webpack_public_path__ + \"static/media/fairy.767c2f56.svg\";","export default __webpack_public_path__ + \"static/media/fighting.f20d1bd2.svg\";","export default __webpack_public_path__ + \"static/media/fire.e0bd7fca.svg\";","export default __webpack_public_path__ + \"static/media/flying.d1778503.svg\";","export default __webpack_public_path__ + \"static/media/ghost.ddf26831.svg\";","export default __webpack_public_path__ + \"static/media/grass.e09623e3.svg\";","export default __webpack_public_path__ + \"static/media/ground.e567f4fc.svg\";","export default __webpack_public_path__ + \"static/media/ice.cd2f9043.svg\";","export default __webpack_public_path__ + \"static/media/normal.2ba66dd5.svg\";","export default __webpack_public_path__ + \"static/media/poison.43956925.svg\";","export default __webpack_public_path__ + \"static/media/psychic.67439878.svg\";","export default __webpack_public_path__ + \"static/media/rock.61a8428d.svg\";","export default __webpack_public_path__ + \"static/media/steel.cb91a92a.svg\";","export default __webpack_public_path__ + \"static/media/water.b6d13329.svg\";","export const apiUrl = process.env.REACT_APP_API_URL\nexport const apiTimeout = process.env.REACT_APP_API_TIMEOUT\n","import Axios from 'axios'\nimport { apiTimeout, apiUrl } from '../common/constants/env'\n\nconst axiosInstance = Axios.create({\n  baseURL: apiUrl,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: apiTimeout\n})\n\nexport default axiosInstance\n","import Api from './api'\n\nconst PokeApiService = {\n  getAll (offSet, limit) {\n    return Api.get(`pokemon?offset=${offSet}&limit=${limit}`)\n  },\n  getDetails (url) {\n    return Api.get(url)\n  }\n}\n\nexport default PokeApiService\n","import styled from 'styled-components'\nimport { Avatar, Box, Card, CardContent, Grid, Typography } from '@material-ui/core'\n\nexport const GridStyled = styled(Grid)`\n  margin-top: 48px;\n`\nexport const CardStyled = styled(Card)`\n  overflow: inherit;\n  background-color: #f5f5f5;\n`\nexport const ImageStyled = styled.img`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: -48px;\n  margin: 0 auto;\n  padding: 0 32px;\n  transition: transform 0.8s;\n    transform-style: preserve-3d;\n  &:hover {\n    transform: rotateY(180deg);\n  }\n`\nexport const CardContentStyled = styled(CardContent)`\n  padding: 32px 8px 8px 8px;\n`\nexport const NameStyled = styled(Typography)`\n  text-transform: capitalize;\n  text-align: center;\n`\nexport const TypesStyled = styled(Box)`\n  text-align: center;\n`\nexport const AvatarStyled = styled(Avatar)`\n  margin: 0 4px;\n  background-color: #cfcfcf;\n  padding: 4px;\n  width: 24px;\n  height: 24px;\n  display: inline-block;\n`\nexport const PriceStyled = styled(Typography)`\n  text-transform: capitalize;\n  text-align: center;\n`\n","/* eslint-disable no-unused-expressions */\n/* eslint complexity: [\"error\", 5] */\n\nimport React, { useEffect } from 'react'\nimport Alert from '@material-ui/lab/Alert'\nimport { Button, CardActionArea, Container, Grid, Snackbar, Typography } from '@material-ui/core'\nimport Loading from '../../components/Loading'\nimport { usePokemon } from '../../hooks/usePokemon'\nimport { GridStyled, CardStyled, ImageStyled, CardContentStyled, NameStyled, TypesStyled, PriceStyled, AvatarStyled } from './style'\n\nconst Home = () => {\n  const {\n    loading,\n    data,\n    error,\n    setError,\n    paginate,\n    getAllPokemon\n  } = usePokemon()\n\n  useEffect(() => {\n    getAllPokemon()\n  }, [getAllPokemon])\n\n  return (\n    <Container>\n      {loading &&\n        <Loading backdrop={true} />\n      }\n      {error &&\n        <Snackbar\n          open={error}\n          anchorOrigin={{ horizontal: 'right', vertical: 'top' }}\n          autoHideDuration={6000}\n          onClose={() => setError(false)}\n        >\n          <Alert variant=\"filled\" severity=\"error\">\n            Ocorreu um erro, tente novamente!\n          </Alert>\n        </Snackbar>\n      }\n      <Grid container spacing={2}>\n        {data.length > 0 ? (\n          <>\n            {data.map(item => (\n              <GridStyled item xs={6} sm={4} md={3} lg={2} key={item.id}>\n                <CardStyled>\n                  <CardActionArea>\n                    <ImageStyled\n                      alt={item.name}\n                      title={item.name}\n                      src={item.sprites.front_default}\n                      onMouseOver={(e) => {\n                        e.currentTarget.src = item.sprites.back_default\n                      }}\n                      onMouseOut={(e) => {\n                        e.currentTarget.src = item.sprites.front_default\n                      }}\n                    />\n                    <CardContentStyled>\n                      <NameStyled variant=\"h5\">\n                        {item.name}\n                      </NameStyled>\n                      <PriceStyled variant=\"subtitle1\">\n                        <b>$</b> {item.base_experience}\n                      </PriceStyled>\n                      <TypesStyled>\n                        {item.types.map(type => (\n                          <AvatarStyled\n                            key={type.type.name}\n                            src={require(`../../assets/icons/${type.type.name}.svg`).default}\n                            alt={type.type.name}\n                          />\n                        ))}\n                      </TypesStyled>\n                    </CardContentStyled>\n                  </CardActionArea>\n                </CardStyled>\n              </GridStyled>\n            ))}\n            <Grid item xs={12} align=\"center\">\n              <Button data-testid=\"btnLoadMore\" variant=\"outlined\" size=\"large\" color=\"primary\" onClick={() => paginate()}>\n              Carregar mais\n              </Button>\n            </Grid>\n          </>\n        ) :\n          !loading && (\n            <Grid item xs={12} align=\"center\">\n              <Typography>Nenhum Pokemon encontrado...</Typography>\n            </Grid>\n          )\n        }\n\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Home\n","/* eslint complexity: [\"error\", 5] */\n\nimport { useState, useCallback } from 'react'\nimport PokeApiService from '../services/pokeapi'\n\nexport const usePokemon = () => {\n  const limit = 24\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [data, setData] = useState([])\n  const [offset, setOffset] = useState(0)\n\n  const paginate = () => {\n    setOffset(offsetCurrent => offsetCurrent + limit)\n  }\n\n  const getPokemonDetail = async (pokemons) => {\n    const pokemonListDetails = await Promise.all(\n      pokemons.map(async ({ url }) => {\n        try {\n          const responseDetails = await PokeApiService.getDetails(url)\n          return responseDetails && responseDetails.data\n        } catch (exception) {\n          return {}\n        }\n      })\n    )\n\n    return pokemonListDetails\n  }\n\n  const getAllPokemon = useCallback(async () => {\n    try {\n      setError(false)\n      setLoading(true)\n\n      const responseList = await PokeApiService.getAll(offset, limit)\n      let responseDetails = await getPokemonDetail(responseList.data.results)\n      responseDetails = responseDetails.filter(value => Object.keys(value).length !== 0)\n\n      setData(dataCurrent => dataCurrent.concat(responseDetails))\n    } catch (err) {\n      if (err.response && err.response.status === 404) {\n        setData([])\n      } else {\n        setError(true)\n      }\n    } finally {\n      setLoading(false)\n    }\n  }, [offset])\n\n  return {\n    loading,\n    data,\n    error,\n    setError,\n    offset,\n    paginate,\n    getAllPokemon\n  }\n}\n"],"sourceRoot":""}