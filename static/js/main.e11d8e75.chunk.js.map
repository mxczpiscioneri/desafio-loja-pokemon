{"version":3,"sources":["theme.js","assets/images/background.png","style.js","components/Cart/style.js","components/Cart/index.jsx","components/Drawer/index.jsx","App.js","reportWebVitals.js","index.js","hooks/useLocalStorage.js","contexts/pokemon.js","common/utils/format.js","common/constants/typesOfPokemon.js","routes/index.js","components/Loading/style.js","components/Loading/index.jsx"],"names":["primaryLight","primaryDark","theme","createMuiTheme","palette","primary","main","light","dark","secondary","common","white","black","warning","background","default","gradient","typography","useNextVariants","responsiveFontSizes","BackgroundStyled","styled","div","image","props","backgroundColor","ListStyled","List","ListSubheaderStyled","ListSubheader","ListItemResumeStyled","ListItem","ButtonStyled","Button","Cart","usePokemonContext","cart","removeCart","clearCart","toggleDrawer","useTheme","total","subheader","map","pokemon","index","base_experience","ListItemAvatar","Avatar","src","sprites","front_default","ListItemText","name","money","ListItemSecondaryAction","IconButton","size","edge","aria-label","onClick","Divider","length","data-testid","variant","color","fullWidth","text","MySwal","withReactContent","Swal","fire","title","html","confirmButtonText","confirmButtonColor","showCancelButton","cancelButtonText","cancelButtonColor","reverseButtons","allowOutsideClick","then","result","isConfirmed","icon","showConfirmButton","timerProgressBar","timer","Drawer","open","iOS","test","navigator","userAgent","handlerOpenClose","event","preventDefault","SwipeableDrawer","anchor","onClose","onOpen","disableBackdropTransition","disableDiscovery","App","StylesProvider","injectFirst","CssBaseline","Consumer","context","getType","type","fallback","Loading","backdrop","drawer","Routes","route","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","keys","slug","value","PokemonContext","createContext","PokemonProvider","children","useState","stored","window","localStorage","getItem","error","storedValue","setStoredValue","setValue","key","oldValue","setItem","useLocalStorage","setDrawer","status","Provider","setType","JSON","parse","addCart","listPokemon","push","stringify","newListPokemon","filter","_","i","useContext","Intl","NumberFormat","style","currency","format","typesOfPokemon","find","item","Home","lazy","Details","paths","home","details","routes","BackdropStyled","Backdrop","LoadingStyled","Progress","CircularProgress"],"mappings":"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","file":"static/js/main.e11d8e75.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core'\n\n// colors\nconst primary = '#378B7D'\nconst primaryLight = '#639d25'\nconst primaryDark = '#427768'\nconst secondary = '#795548'\nconst black = '#343a40'\nconst white = '#FFFFFF'\nconst background = '#f5f5f5'\nconst backgroundMain = '#cfcfcf'\nconst warningLight = 'rgba(253, 200, 69, .3)'\nconst warningMain = 'rgba(253, 200, 69, .5)'\nconst warningDark = 'rgba(253, 200, 69, .7)'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: primary,\n      light: primaryLight,\n      dark: primaryDark\n    },\n    secondary: { main: secondary },\n    common: {\n      white,\n      black\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    background: {\n      default: background,\n      main: backgroundMain,\n      gradient: `linear-gradient(45deg, ${primaryLight} 30%, ${primaryDark} 90%)`\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n})\n\nexport default responsiveFontSizes(theme)\n","export default __webpack_public_path__ + \"static/media/background.8606724d.png\";","import styled from 'styled-components'\nimport image from './assets/images/background.png'\n\nexport const BackgroundStyled = styled.div`\n  background-image: url(${image});\n  background-color: ${props => props.backgroundColor};\n  background-attachment: fixed;\n  transition: background-color 0.5s ease;\n  min-height: 100vh;\n`\n","import styled from 'styled-components'\nimport { Button, List, ListItem, ListSubheader } from '@material-ui/core'\n\nexport const ListStyled = styled(List)`\n  ${({ theme }) => `\n    width: 100%;\n    min-width: 240px;\n    max-width: 360px;\n    background-color: ${theme.palette.background.default};\n    padding: 0;\n  `}\n`\n\nexport const ListSubheaderStyled = styled(ListSubheader)`\n  box-shadow: 0 1px 3px rgb(0 0 0 / 12%), 0 1px 2px rgb(0 0 0 / 24%);\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 16px;\n\n  svg {\n    margin-right: 16px;\n  }\n`\n\nexport const ListItemResumeStyled = styled(ListItem)`\n  ${({ theme }) => `\n    background-color: ${theme.palette.background.main};\n  `}\n  span {\n    float: left;\n  }\n\n  p {\n    float: right;\n  }\n`\n\nexport const ButtonStyled = styled(Button)`\n  ${({ theme }) => `\n    background-color: ${theme.palette.primary.main};\n    background: ${theme.palette.background.gradient};\n  `}\n`\n","import React, { Fragment } from 'react'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport { Avatar, Divider, IconButton, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText } from '@material-ui/core'\nimport { ButtonStyled, ListItemResumeStyled, ListStyled, ListSubheaderStyled } from './style'\nimport { usePokemonContext } from '../../contexts/pokemon'\nimport { money } from '../../common/utils/format'\nimport { useTheme } from '@material-ui/styles'\n\nconst Cart = () => {\n  const { cart, removeCart, clearCart, toggleDrawer } = usePokemonContext()\n  const theme = useTheme()\n  let total = 0\n\n  const handlerFinish = () => {\n    toggleDrawer()\n    const text = `Você escolheu ${cart.length} Pokemón.<br />O valor total é de ${money(total)}.`\n    const MySwal = withReactContent(Swal)\n    MySwal.fire({\n      title: 'Revisão do pedido',\n      html: text,\n      confirmButtonText: 'Concluir pedido',\n      confirmButtonColor: theme.palette.primary.main,\n      showCancelButton: true,\n      cancelButtonText: 'Voltar',\n      cancelButtonColor: theme.palette.background.main,\n      reverseButtons: true,\n      allowOutsideClick: false\n    }).then((result) => {\n      if (result.isConfirmed) {\n        clearCart()\n        MySwal.fire({\n          icon: 'success',\n          title: 'Obrigado pela compra!',\n          text: `Você ganhou ${money(total / 10)} (10%) de cashback!`,\n          showConfirmButton: false,\n          timerProgressBar: true,\n          timer: 5000\n        })\n      }\n    })\n  }\n\n  return (\n    <>\n      <ListStyled subheader={<ListSubheaderStyled>Carrinho de compras</ListSubheaderStyled>}>\n        {cart.map((pokemon, index) => {\n          total += pokemon.base_experience\n          return (\n            <Fragment key={index}>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar src={pokemon.sprites.front_default} />\n                </ListItemAvatar>\n                <ListItemText primary={pokemon.name} secondary={money(pokemon.base_experience)} />\n                <ListItemSecondaryAction>\n                  <IconButton size=\"small\" edge=\"end\" aria-label=\"deletar\" onClick={() => removeCart(index)}>\n                    <HighlightOffIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n              <Divider />\n            </Fragment>\n          )\n        })}\n        {cart.length === 0 ?\n          <ListItem>\n            <ListItemText primary=\"Adicione um Pokémon no carrinho\" />\n          </ListItem> :\n          <>\n            <ListItemResumeStyled>\n              <ListItemText primary='Total' secondary={money(total)} />\n            </ListItemResumeStyled>\n            <ListItemResumeStyled>\n              <ButtonStyled data-testid=\"btnFinish\" size=\"large\" variant=\"contained\" color=\"primary\" fullWidth onClick={handlerFinish}>\n            Continuar\n              </ButtonStyled>\n            </ListItemResumeStyled>\n          </>\n        }\n      </ListStyled>\n    </>\n  )\n}\n\nexport default Cart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { SwipeableDrawer } from '@material-ui/core'\nimport Cart from '../Cart'\n\nconst Drawer = ({ open, toggleDrawer }) => {\n  const iOS = /iPad|iPhone|iPod/.test(navigator.userAgent)\n  const handlerOpenClose = (event) => {\n    if (event) {\n      event.preventDefault()\n    }\n\n    toggleDrawer()\n  }\n\n  return (\n    <SwipeableDrawer\n      anchor={'right'}\n      open={open}\n      onClose={handlerOpenClose}\n      onOpen={handlerOpenClose}\n      disableBackdropTransition={!iOS}\n      disableDiscovery={iOS}\n    >\n      <Cart />\n    </SwipeableDrawer>\n  )\n}\n\nDrawer.propTypes = {\n  open: PropTypes.bool.isRequired,\n  toggleDrawer: PropTypes.func.isRequired\n}\n\nexport default Drawer\n","import React, { Suspense } from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport { CssBaseline, MuiThemeProvider } from '@material-ui/core'\nimport { ThemeProvider } from 'styled-components'\nimport Routes from './routes'\nimport Loading from './components/Loading'\nimport PokemonContext, { PokemonProvider } from './contexts/pokemon'\nimport theme from './theme'\nimport { BackgroundStyled } from './style'\nimport { getType } from './common/constants/typesOfPokemon'\nimport Drawer from './components/Drawer'\n\nconst App = () => (\n  <StylesProvider injectFirst>\n    <MuiThemeProvider theme={theme}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <PokemonProvider>\n          <PokemonContext.Consumer>\n            {context => (\n              <BackgroundStyled backgroundColor={getType(context.type).color}>\n                <Suspense fallback={<Loading backdrop={false} />}>\n                  <Drawer open={context.drawer} toggleDrawer={context.toggleDrawer} />\n                  <HashRouter>\n                    <Switch>\n                      {Routes.map(route => (\n                        <Route key={route.path} path={route.path} exact={route.exact} component={route.component} />\n                      ))}\n                    </Switch>\n                  </HashRouter>\n                </Suspense>\n              </BackgroundStyled>\n            )}\n          </PokemonContext.Consumer>\n        </PokemonProvider>\n      </ThemeProvider>\n    </MuiThemeProvider>\n  </StylesProvider>\n)\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { useState } from 'react'\n\nexport const keys = {\n  type: { slug: 'type', value: 'POKEMON@TYPE' },\n  cart: { slug: 'cart', value: 'POKEMON@CART' }\n}\n\nexport const useLocalStorage = () => {\n  const [storedValue, setStoredValue] = useState(() => {\n    let stored = null\n    try {\n      const typeSaved = window.localStorage.getItem(keys.type.value) || 'all'\n      const cartSaved = window.localStorage.getItem(keys.cart.value) || '[]'\n      stored = { type: typeSaved, cart: cartSaved }\n    } catch (error) { }\n    return stored\n  })\n\n  const setValue = (key, value) => {\n    try {\n      setStoredValue(oldValue => ({ ...oldValue, [keys[key.slug].slug]: value }))\n      window.localStorage.setItem(key.value, value)\n    } catch (error) { }\n  }\n\n  return {\n    storedValue,\n    setValue\n  }\n}\n","import React, { createContext, useContext, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { keys, useLocalStorage } from '../hooks/useLocalStorage'\n\nconst PokemonContext = createContext({})\n\nexport const PokemonProvider = ({ children }) => {\n  const { storedValue, setValue } = useLocalStorage()\n  const [drawer, setDrawer] = useState(false)\n\n  const toggleDrawer = () => {\n    setDrawer(status => !status)\n  }\n\n  const setType = (type) => {\n    setValue(keys.type, type)\n  }\n\n  const addCart = (pokemon) => {\n    const listPokemon = JSON.parse(storedValue.cart)\n    listPokemon.push(pokemon)\n\n    setValue(keys.cart, JSON.stringify(listPokemon))\n    toggleDrawer()\n  }\n\n  const removeCart = (index) => {\n    const listPokemon = JSON.parse(storedValue.cart)\n    const newListPokemon = listPokemon.filter((_, i) => i !== index)\n\n    setValue(keys.cart, JSON.stringify(newListPokemon))\n  }\n\n  const clearCart = () => {\n    setValue(keys.cart, JSON.stringify([]))\n  }\n\n  return (\n    <PokemonContext.Provider value={{\n      type: storedValue.type,\n      setType,\n      cart: JSON.parse(storedValue.cart),\n      addCart,\n      removeCart,\n      clearCart,\n      drawer,\n      toggleDrawer }}\n    >\n      {children}\n    </PokemonContext.Provider>\n  )\n}\n\nexport const usePokemonContext = () => useContext(PokemonContext)\n\nPokemonProvider.propTypes = {\n  children: PropTypes.any.isRequired\n}\n\nexport default PokemonContext\n","export const money = value => new Intl.NumberFormat('pt-br', { style: 'currency', currency: 'BRL' }).format(value)\n","const typesOfPokemon = [\n  { name: 'all', color: '#333333' },\n  { name: 'normal', color: '#a7a776' },\n  { name: 'fighting', color: '#c03827' },\n  { name: 'flying', color: '#a890f0' },\n  { name: 'poison', color: '#a04aa0' },\n  { name: 'ground', color: '#e0c068' },\n  { name: 'rock', color: '#b8a038' },\n  { name: 'bug', color: '#a8b820' },\n  { name: 'ghost', color: '#705898' },\n  { name: 'steel', color: '#9393b3' },\n  { name: 'fire', color: '#f08030' },\n  { name: 'water', color: '#6890f0' },\n  { name: 'grass', color: '#78c851' },\n  { name: 'electric', color: '#f8d030' },\n  { name: 'psychic', color: '#ee5588' },\n  { name: 'ice', color: '#67c6c6' },\n  { name: 'dragon', color: '#7563f7' },\n  { name: 'dark', color: '#705848' },\n  { name: 'fairy', color: '#ed8590' }\n]\n\nexport const getType = name => typesOfPokemon.find(item => item.name === name) || {}\n\nexport default typesOfPokemon\n","import { lazy } from 'react'\n\nconst Home = lazy(() => import('../containers/Home'))\nconst Details = lazy(() => import('../containers/Details'))\n\nexport const paths = {\n  home: '/',\n  type: '/types/:type',\n  details: '/pokemon/:name'\n}\n\nconst routes = [\n  {\n    path: paths.home,\n    component: Home,\n    exact: true\n  },\n  {\n    path: paths.type,\n    component: Home,\n    exact: true\n  },\n  {\n    path: paths.details,\n    component: Details,\n    exact: true\n  }\n]\n\nexport default routes\n","import styled from 'styled-components'\nimport Backdrop from '@material-ui/core/Backdrop'\n\nexport const BackdropStyled = styled(Backdrop)`\n  z-index: 99;\n`\n\nexport const LoadingStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { BackdropStyled, LoadingStyled } from './style'\n\nconst Progress = () => (\n  <LoadingStyled>\n    <CircularProgress />\n  </LoadingStyled>\n)\n\nconst Backdrop = () => (\n  <BackdropStyled open={true}>\n    <Progress />\n  </BackdropStyled>\n)\n\nconst Loading = ({ backdrop }) => (backdrop ? <Backdrop/> : <Progress />)\n\nLoading.propTypes = {\n  backdrop: PropTypes.bool.isRequired\n}\n\nexport default Loading\n"],"sourceRoot":""}